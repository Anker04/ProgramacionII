import customtkinter as ctk
from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas

class Ingrediente:
    def __init__(self, nombre, cantidad, unidad_de_medida, costo):
        self.nombre = nombre
        self.cantidad = cantidad
        self.unidad_de_medida = unidad_de_medida
        self.costo = costo

class GestorDeStock:
    def __init__(self):
        self.ingredientes = []

    def agregar_ingrediente(self, ingrediente):
        self.ingredientes.append(ingrediente)
    
    def actualizar_stock(self, nombre, cantidad):
        for ingrediente in self.ingredientes:
            if ingrediente.nombre == nombre:
                ingrediente.cantidad += cantidad

class Producto:
    def __init__(self, nombre, ingredientes, precio):
        self.nombre = nombre
        self.ingredientes = ingredientes
        self.precio = precio

class Pedido:
    def __init__(self):
        self.productos = []

    def agregar_producto(self, producto, cantidad):
        self.productos.append((producto, cantidad))
    
    def calcular_total(self):
        return sum(producto.precio * cantidad for producto, cantidad in self.productos)

class Boleta:
    def __init__(self, pedido):
        self.pedido = pedido

    def generar_pdf(self, filename):
        c = canvas.Canvas(filename, pagesize=A4)
        c.drawString(100, 750, "Boleta de Venta")
        y = 700
        for producto, cantidad in self.pedido.productos:
            c.drawString(100, y, f"{producto.nombre}: {cantidad} x {producto.precio} = {cantidad * producto.precio}")
            y -= 20
        c.drawString(100, y-20, f"Total: {self.pedido.calcular_total()}")
        c.save()

# Ejemplo de uso
if __name__ == "__main__":
    root = ctk.CTk()
    root.mainloop()
